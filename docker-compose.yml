version: '3.9'

services:
  app:
    restart: always
    container_name: app
    build:
      context: .
    ports:
      - '8000:8000'
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PASS=${DB_PASS}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}/0
    depends_on:
      - db
      - redis
      - celery

  db:
    restart: always
    container_name: db
    ports:
      - "5432:5432"
    image: postgres:13-alpine
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    restart: always
    container_name: redis
    image: redis:7-alpine
    ports:
      - "6379:6379"

  celery:
    restart: always
    build:
      context: .
    container_name: celery
    command: celery -A TaskAndNotificationSystem worker --loglevel=info
    volumes:
      - ./:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PASS=${DB_PASS}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}/0
    depends_on:
      - db
      - redis

  celery_beat:
    restart: always
    build:
      context: .
    container_name: celery_beat
    command: celery -A TaskAndNotificationSystem beat --loglevel=info
    volumes:
      - ./:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PASS=${DB_PASS}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}/0
    depends_on:
      - db
      - redis

volumes:
  db_data:
